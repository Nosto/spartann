plugins {
    id 'myproject.java-conventions'
    id 'myproject.scala-conventions'
}

group 'com.nosto'
version '0.0.6'

java {
    sourceCompatibility "11"
    targetCompatibility "11"
}

dependencies {
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.2.0'
    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.2.0'
    testImplementation group: 'org.scalatest', name: 'scalatest_2.12', version: '3.0.9'
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.12:2.0.1'
    testRuntimeOnly 'com.vladsch.flexmark:flexmark-all:0.62.2'
    implementation group: 'org.scala-lang', name: 'scala-library', version: '2.12.12'

    // JNA 5.12.1 is needed to support M1 https://github.com/annoy4s/annoy4s/pull/18/files.
    // Additionally we use custom built annoy4s package containing native code for M1 Mac & Linux ARM.
    implementation group: 'net.pishen', name: "annoy4s_2.12", version: '0.10.0-nosto-m1-and-linux-arm-support'
    implementation group: 'net.java.dev.jna', name: 'jna', version: '5.12.1'

    implementation group: 'org.apache.spark', name: "spark-core_2.12", version: '3.0.0'
    testImplementation group: 'com.holdenkarau', name: "spark-testing-base_2.12", version: '3.0.0_1.1.0'
    testImplementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.12', version: '2.12.3'
}

publishing {
    repositories {
        maven {
            name = "github"
            url = uri("https://maven.pkg.github.com/nosto/spartann")
            credentials(PasswordCredentials)
        }
    }
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'Spartann'
                description = 'Hyper performant kNN using Annoy for Apache Spark.'
                url = 'https://github.com/nosto/spartann'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'mridang'
                        name = 'Mridang Agarwalla'
                        email = 'mridang.agarwalla@osto.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/nosto/spartann.git'
                    developerConnection = 'scm:git:ssh://github.com/nosto/spartann.git'
                    url = 'https://github.com/nosto/spartann'
                }
                issueManagement {
                    system = "Github"
                    url = "https://github.com/nosto/spartann/issues"
                }
            }
        }
    }
}

checkForDuplicateClasses {
    excludes(['.*'])
}
